#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "scheduler.fullname" . }}-{{ .Values.scheduler.component }}"
  namespace: {{ .Release.namespace }}
  labels:
    app: {{ template "scheduler.name" . }}
    chart: {{ template "scheduler.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ .Values.scheduler.component }}
    cluster: {{ template "scheduler.fullname" . }}
data:
  threads: {{ .Values.scheduler.configData.threads | quote }}
  vertica.datasource.host: {{ template "vertica.host" .}}
  vertica.datasource.port: {{ template "vertica.port" .}}
  vertica.datasource.database: {{ template "vertica.db" .}}
  vertica.datasource.username: {{ template "vertica.rwuser" .}}
  vertica.datasource.resourcepool: {{ template "resource.pool" .}}
  vertica.datasource.password.key: {{ .Values.global.vertica.rwuserkey | quote }}
  vertica.datasource.readonly.username: {{ template "vertica.rouser" .}}
  vertica.datasource.is.tls.enabled: {{ .Values.global.vertica.tlsEnabled | quote  }}
  batch.duration: {{ .Values.scheduler.configData.batch.duration | quote }}
  batch.units: {{ .Values.scheduler.configData.batch.units }}
  copyRead.timeout: {{ .Values.scheduler.configData.copyRead.timeout | quote }}
  copyRead.units: {{ .Values.scheduler.configData.copyRead.units}}
  receiverQueue.size: {{ .Values.scheduler.configData.receiverQueue.size | quote }}
  heartbeat.timeout: {{ .Values.scheduler.configData.heartbeat.timeout | quote }}
  #tenant and deployment for schema name
  {{ include "validateTenantAndDeploymentForUdxScheduler" . | required "The total length of tenant and deployment should not be more than 70 characters" }}
  scheduler.rpm.version: {{ .Values.scheduler.rpmVersion }}
  scheduler.enable.rpm.version.check: {{ .Values.scheduler.configData.scheduler.enableRpmVersionCheck | quote }}
  scheduler.log.level: {{ .Values.scheduler.configData.logLevel }}
  scheduler.udx.log.level: {{ .Values.scheduler.configData.udxLogLevel }}
  scheduler.enable.performance.test: {{ .Values.scheduler.configData.enablePerformanceTest | quote }}
  scheduler.jdbc.opt: {{ .Values.scheduler.configData.scheduler.jdbcOpts | quote }}
  scheduler.explicit.statement.execute: {{ .Values.scheduler.configData.scheduler.explicitStatementExecution | quote }}
  scheduler.pulsar.topic.partition.auto.refresh: {{ .Values.scheduler.configData.scheduler.pulsarTopicAutoRefreshEnabled | quote }}
  scheduler.parser.parameters: {{ .Values.scheduler.configData.scheduler.parserParameters | quote }}

  scheduler.configserver.hostname: {{ .Values.diadmin.config.adminServiceName | quote }}
  scheduler.configserver.port: {{ .Values.diadmin.config.adminPort | quote }}
  scheduler.configserver.connection.retry.delay.ms: {{ .Values.scheduler.configData.scheduler.configServer.connectRetryDelayMs | quote }}
  scheduler.configserver.client.heart.beat: {{ .Values.scheduler.configData.scheduler.configServer.clientHeartBeat | quote }}
  scheduler.configserver.server.heart.beat: {{ .Values.scheduler.configData.scheduler.configServer.serverHeartBeat | quote }}
  scheduler.configserver.message.buffer.size.limit.mb: {{ .Values.scheduler.configData.scheduler.configServer.messageBufferSizeLimitInMb | quote }}
  scheduler.failed.event.initial.delay.millis: {{ .Values.scheduler.configData.scheduler.configServer.failedEventInitialDelayMillis | quote }}
  scheduler.failed.event.retry.delay.millis: {{ .Values.scheduler.configData.scheduler.configServer.failedEventRetryDelayMillis | quote }}
  scheduler.enable.restart.scheduler.job: {{ .Values.scheduler.configData.scheduler.enableRestartSchedulerJob | quote }}
  scheduler.max.memory.usage.percentage: {{ .Values.scheduler.configData.scheduler.maxMemoryUsagePercentage | quote }}
  scheduler.data.retention.job.cron.schedule: {{ .Values.scheduler.configData.scheduler.dataRetentionJobCronSchedule | quote }}
  scheduler.enable.data.retention.job: {{ .Values.scheduler.configData.scheduler.enableDataRetentionJob | quote }}
  scheduler.enable.udx.has.message.check: {{ .Values.scheduler.configData.scheduler.enableUdxHasMessageCheck | quote }}
  scheduler.load.method: {{ .Values.scheduler.configData.scheduler.copyLoadMethod | quote }}
  scheduler.enable.node.parallelism: {{ .Values.scheduler.configData.scheduler.enableNodeParallelism | quote }}
  scheduler.enable.frame.backlog.check: {{ .Values.scheduler.configData.scheduler.enableFrameBacklogCheck | quote }}
  scheduler.udx.ack.grouping.time.millis: {{ .Values.scheduler.configData.scheduler.udxAckGroupingTimeMillis | quote }}
  scheduler.udx.max.message.count: {{ .Values.scheduler.configData.scheduler.udxMaxMessageCount | quote }}
  scheduler.udx.max.stream.size.bytes: {{ .Values.scheduler.configData.scheduler.udxMaxStreamSizeBytes | quote }}
  scheduler.staggered.sleep.duration.millis: {{ .Values.scheduler.configData.scheduler.staggeredSleepDurationMillis | quote }}
  scheduler.supported.vertica.versions: {{ .Values.scheduler.configData.scheduler.supportedVerticaVersions | quote }}
  scheduler.max.minutes.past.last.batch.update: {{ .Values.scheduler.configData.scheduler.maxMinutesPastLastBatchUpdate | quote }}
  scheduler.restart.time.interval.in.hours: {{ .Values.scheduler.configData.scheduler.restartTimeIntervalInHours | quote }}
  scheduler.frame.duration: {{ template "scheduler.frame_duration" .}}
  scheduler.udx.pulsar.client.cleanup: {{ .Values.scheduler.configData.scheduler.udxPulsarClientCleanUp | quote }}
  scheduler.lane.worker.connection.close.threshold: {{ .Values.scheduler.configData.scheduler.laneWorkerConnectionCloseThreshold | quote }}
  scheduler.vdb.connection.close.threshold: {{ .Values.scheduler.configData.scheduler.vdbConnectionCloseThreshold | quote }}
  scheduler.udx.pulsar.client.cleanup.threshold: {{ .Values.scheduler.configData.scheduler.udxPulsarClientCleanupThreshold | quote }}
  scheduler.alive.check.time.interval.seconds: {{ .Values.scheduler.configData.scheduler.aliveCheckTimeIntervalSeconds | quote }}
  scheduler.enable.microbatch.backlog.check: {{ .Values.scheduler.configData.scheduler.enableMicrobatchBacklogCheck | quote }}
  scheduler.enable.subscription.cleaner: {{ .Values.scheduler.configData.scheduler.enableSubscriptionCleaner | quote }}
  pulsar.tenant: {{ .Values.scheduler.configData.pulsar.tenant }}
  pulsar.namespace: {{ .Values.scheduler.configData.pulsar.namespace }}
  pulsar.broker.service.port: {{ .Values.broker.ports.pulsar | quote }}
  pulsar.broker.service.port.tls: {{ .Values.broker.ports.pulsarssl | quote }}
  pulsar.web.service.port: {{ .Values.broker.ports.http | quote }}
  pulsar.web.service.port.tls: {{ .Values.broker.ports.https | quote }}
  pulsar.tls.hostname.verification: {{ .Values.scheduler.configData.pulsar.tlsHostnameVerification | quote }}
  pulsar.service.name: {{ .Values.broker.serviceName | quote }}
  pulsar.auth.class: {{ .Values.scheduler.configData.pulsar.authClass | quote }}
  pulsar.enable.message.acknowledgement: {{ .Values.scheduler.configData.pulsar.enableMessageAcknowledgement | quote }}

  pulsar.datasource.host: {{ template "pulsar.proxy_service_name" .}}
  pulsar.datasource.port: {{ template "pulsar.proxy_service_port" .}}
  pulsar.admin.datasource.host: {{ .Values.scheduler.configData.pulsarAdmin.host }}
  pulsar.admin.datasource.port: {{ .Values.scheduler.configData.pulsarAdmin.port | quote }}
  administration.datasource.host: {{ .Values.diadmin.config.adminServiceName }}
  administration.datasource.port: {{ .Values.diadmin.config.adminPort | quote }}
  scheduler.retention: {{ .Values.scheduler.configData.history.retention | quote }}
  SCHED_UID: {{ .Values.global.securityContext.user | quote }}
  SCHED_GID: {{ .Values.global.securityContext.fsGroup | quote }}
{{ toYaml .Values.scheduler.configData.env | indent 2 }}

  scheduler.logconfig.from.configmap: {{ .Values.scheduler.configData.scheduler.logConfigFromConfigmap | quote}}
  scheduler.logconfig.log.to.file: {{ .Values.global.di.logging.useFile | quote}}