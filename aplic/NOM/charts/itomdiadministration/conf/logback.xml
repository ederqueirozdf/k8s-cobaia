<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true" scanPeriod="30 seconds">

  <property name="FILE_LOG_PATTERN"
            value="%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } [%t] --- %-40.40logger{39} %X{Context} [%X{DataSetID} %X{Event} %X{ConfigurationType} %X{AggregateName} %X{AggregateType}]: %m%n"/>

  <appender name="LogFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <append>true</append>
    <file>${ADMINISTRATION_LOG_PATH}/administration.log</file>
    <encoder>
      <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <minIndex>1</minIndex>
      <maxIndex>10</maxIndex>
      <fileNamePattern>${ADMINISTRATION_LOG_PATH}/administration.log.%i</fileNamePattern>
      </rollingPolicy>
      <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
        <maxFileSize>10MB</maxFileSize>
      </triggeringPolicy>
  </appender>
  <appender name="MigrationLogFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <Append>true</Append>
    <file>${ADMINISTRATION_LOG_PATH}/fileToDbMigration.log</file>
    <encoder>
      <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <minIndex>1</minIndex>
      <maxIndex>10</maxIndex>
      <fileNamePattern>${ADMINISTRATION_LOG_PATH}/fileToDbMigration.log.%i</fileNamePattern>
     </rollingPolicy>
     <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
       <maxFileSize>10MB</maxFileSize>
     </triggeringPolicy>
    </appender>
    <appender name="ConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="AuditLogFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <file>${ADMINISTRATION_AUDIT_LOG_PATH}/administration-audit.log</file>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
            <fileNamePattern>${ADMINISTRATION_LOG_PATH}/administration.log.%i</fileNamePattern>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>10MB</maxFileSize>
        </triggeringPolicy>
    </appender>

    <logger name="com.swgrp.itomdi.administration.service.fileSystemToDbMigration" level="INFO" additivity="false">

    {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="MigrationLogFileAppender"/>
        {{- end }}
    </logger>


    <logger name="com.swgrp.itomdi" level="INFO" additivity="false">
        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </logger>


    <logger name="org.hibernate.internal.util.EntityPrinter" level="ERROR" additivity="false">
        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </logger>


    <logger name="org.hibernate" level="ERROR" additivity="false">

        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </logger>


    <logger name="org.springframework.transaction.support.AbstractPlatformTransactionManager" level="ERROR" additivity="false">
        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </logger>


    <logger name="org.springframework.orm.hibernate5.HibernateTransactionManager" level="ERROR" additivity="false">
    {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </logger>


    <logger name="org.springframework.orm.jpa.JpaTransactionManager" level="ERROR" additivity="false">

        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </logger>


    <logger name="org.springframework.jdbc.datasource.DataSourceTransactionManager" level="ERROR" additivity="false">

        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </logger>

    <logger name="com.swgrp.itomdi.administration.interceptors.LoggerInterceptor" level="INFO" additivity="false">
        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="AuditLogFileAppender"/>
        {{- end }}
    </logger>
    <logger name="com.swgrp.itomdi.administration.interceptors.ThrottleInterceptor" level="INFO" additivity="false">
        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="AuditLogFileAppender"/>
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </logger>

    <logger name="com.swgrp.itomdi.administration.service.eventListeners" level="INFO" additivity="false">
        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="AuditLogFileAppender"/>
        {{- end }}
    </logger>

    <logger name="com.swgrp.itomdi.administration.events.ValidationExceptionEventListener" level="INFO" additivity="false">
        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="AuditLogFileAppender"/>
        {{- end }}
    </logger>
    <logger name="org.apache.tomcat.util" level="OFF"/>
    <logger name="org.apache.tomcat.websocket" level="OFF"/>
    <!--<logger name="org.apache.tomcat.util.net.NioEndpoint" level="DEBUG" additivity="false">
        <appender-ref ref="AuditLogFileAppender"/>
    </logger>-->
    <logger name="org.apache.tomcat.util.net.SecureNioChannel" level="DEBUG" additivity="false">
        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="AuditLogFileAppender"/>
        {{- end }}
    </logger>

    <root level="WARN">

        {{- if and (eq .Values.diadmin.config.admin.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </root>

</configuration>

