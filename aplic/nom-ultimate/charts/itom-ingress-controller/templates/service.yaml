{{ $namePrefix := include "namePrefix" . }}
# Compatible with deprecated k8sProvider key
{{ $provider := "" }}
{{- if .Values.global.cluster }}
  {{- if .Values.global.cluster.k8sProvider }}
  {{- $provider = .Values.global.cluster.k8sProvider }}
  {{- end }}
{{- end }}
{{- if and (.Values.global.k8sProvider) (not $provider) }}
{{- $provider = .Values.global.k8sProvider }}
{{- end }}
# Default to cdf if not set
{{- if not $provider }}
  {{- $provider = "cdf" }}
{{- end }}

{{- if .Values.nginx.service.external.enable }}
{{ $externalServiceType := "" }}
{{- if hasPrefix "cdf" $provider }}
{{ $externalServiceType = (default "NodePort" .Values.nginx.service.external.type) }}
{{- else }}
{{ $externalServiceType = (default "LoadBalancer" .Values.nginx.service.external.type) }}
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $namePrefix }}-ingress-controller-svc
  namespace: {{ .Release.Namespace }}
  annotations:
  {{- if .Values.nginx.service.external.annotations }}
  {{- toYaml .Values.nginx.service.external.annotations  | nindent 4 }}
  {{- end }}
  {{- if eq $externalServiceType "LoadBalancer" }}
  {{- toYaml .Values.global.loadBalancer.annotations  | nindent 4 }}
  {{- end }}
spec:
  type: {{ $externalServiceType }}
  {{- if and ($.Values.global.loadBalancer.ip) (eq $externalServiceType "LoadBalancer")}}
  loadBalancerIP: {{ $.Values.global.loadBalancer.ip }}
  {{- end }}
  {{- if or .Values.global.loadBalancer.sourceRanges .Values.nginx.service.external.sourceRanges }}
  loadBalancerSourceRanges:
  {{- coalesce .Values.nginx.service.external.sourceRanges .Values.global.loadBalancer.sourceRanges | toYaml | nindent 4 }}
  {{- end }}
  ports:
    - name: https
      protocol: TCP
      targetPort: 8443
      {{- if and (not .Values.nginx.service.httpsPort) (not .Values.global.nginx.httpsPort) (not .Values.global.externalAccessPort) }}
      {{- cat "ERROR: Neither nginx.service.httpsPort nor global.nginx.httpsPort nor global.externalAccessPort is defined" | fail }}
      {{- end }}
      {{- if and (eq $externalServiceType "NodePort") (not .Values.nginx.service.external.nodePortAutoAssign) }}
      nodePort: {{ coalesce .Values.nginx.service.httpsNodePort .Values.nginx.service.httpsPort .Values.global.nginx.httpsPort .Values.global.externalAccessPort }}
      {{- end }}
      port: {{ coalesce .Values.nginx.service.httpsPort .Values.global.nginx.httpsPort .Values.global.externalAccessPort }}
    {{- if .Values.nginx.service.external.clientCertAuthPort}}
    - name: client-cert-auth
      protocol: TCP
      targetPort: {{ .Values.nginx.service.external.clientCertAuthPort }}
      {{- if and (eq $externalServiceType "NodePort") (not .Values.nginx.service.external.nodePortAutoAssign) }}
      nodePort: {{ coalesce .Values.nginx.service.external.clientCertAuthNodePort .Values.nginx.service.external.clientCertAuthPort }}
      {{- end }}
      port: {{ .Values.nginx.service.external.clientCertAuthPort }}
    {{- end }}
  selector:
  {{- include "itom-nginx-ingress-controller.selectorLabels" . | nindent 4 }}
{{- end }}
---
{{- if .Values.nginx.service.internal.enable }}
apiVersion: v1
kind: Service
metadata:
  name:  {{ $namePrefix }}-ingress-controller-svc-internal
  namespace: {{ .Release.Namespace }}
  annotations:
  {{- include "helm-lib.service.internalLBAnnotations" . | nindent 4 }}
  {{- if .Values.nginx.service.internal.annotations }}
    {{- $instanceTarget := true }}
    {{- range $key, $val := .Values.nginx.service.internal.annotations }}
    {{- if eq $key "service.beta.kubernetes.io/aws-load-balancer-type" }}
    {{- $instanceTarget = false }}
    {{- end }}
    {{- end }}
    {{- if and (eq $provider "aws") $instanceTarget }}
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    {{- end }}
    {{- toYaml .Values.nginx.service.internal.annotations  | nindent 4 }}
  {{- else }}
    {{- if eq $provider "aws" }}
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    {{- end }}
  {{- end }}
  {{- if .Values.global.loadBalancer.annotations }}
  {{- toYaml .Values.global.loadBalancer.annotations  | nindent 4 }}
  {{- end }}
spec:
  type: {{ .Values.nginx.service.internal.type }}
  {{- if $.Values.global.loadBalancer.ip }}
  loadBalancerIP: {{ $.Values.global.loadBalancer.ip }}
  {{- end }}
  {{- if or .Values.global.loadBalancer.sourceRanges .Values.nginx.service.internal.sourceRanges }}
  loadBalancerSourceRanges:
  {{- coalesce .Values.nginx.service.internal.sourceRanges .Values.global.loadBalancer.sourceRanges | toYaml | nindent 4 }}
  {{- end }}
  ports:
    - name: https
      protocol: TCP
      targetPort: 8443
      {{- if and (not .Values.nginx.service.httpsPort) (not .Values.global.nginx.httpsPort) (not .Values.global.externalAccessPort) }}
      {{- cat "ERROR: Neither nginx.service.httpsPort, global.nginx.httpsPort nor global.externalAccessPort is defined" | fail }}
      {{- end }}
      port: {{ coalesce .Values.nginx.service.internal.httpsPort .Values.nginx.service.httpsPort .Values.global.nginx.httpsPort .Values.global.externalAccessPort }}
  selector:
  {{- include "itom-nginx-ingress-controller.selectorLabels" . | nindent 4 }}
{{- end }}