#
#  (c) Copyright 2018-2021 Micro Focus or one of its affiliates.
#
#  The only warranties for products and services of Micro Focus and its affiliates and licensors
#  ("Micro Focus") are as may be set forth in the express warranty statements accompanying such
#  products and services. Nothing herein should be construed as constituting an additional
#  warranty. Micro Focus shall not be liable for technical or editorial errors or omissions contained
#  herein. The information contained herein is subject to change without notice.
#
#  Except as specifically indicated otherwise, this document contains confidential information
#  and a valid license is required for possession, use or copying. If this work is provided to the
#  U.S. Government, consistent with FAR 12.211 and 12.212, Commercial Computer Software,
#  Computer Software Documentation, and Technical Data for Commercial Items are licensed
#  to the U.S. Government under vendor's standard commercial license.
#
global:

  nom:
    edition: ""

  docker:
    # set the global.docker.registry and orgName to your internal Docker registry/org
    registry: docker.io
    orgName: hpeswitom
    imagePullSecret: "regcred"
    imagePullPolicy: IfNotPresent

  # User ID and group ID to run as
  securityContext:
    user: "1999"
    fsGroup: "1999"

  rbac:
    # Specifies whether a ServiceAccount should be created
    serviceAccountCreate: true

  # persistence.enabled=true means that the PVCs are expected to be dynamically created by the composition chart.
  # Otherwise, persistence.dataVolumeClaim is a persistent volume claim for storing data files.
  # persistence.logVolumeClaim is a persistent volume claim for storing log files.
  # If all of the above are undefined, then temporary ephemeral storage will be created (only if isDemo=true)
  persistence:
    enabled: false
    dataVolumeClaim:
    configVolumeClaim:

  # REQUIRED: The externalAccessHost is the end-point for the service
  externalAccessHost:
  # The externalAccessPort defaults to 443
  externalAccessPort: 443

  vaultRenew:
    image: kubernetes-vault-renew
    imageTag: 0.12.0-003
  vaultInit:
    image: kubernetes-vault-init
    imageTag: 0.12.0-003

  busybox:
    image: itom-busybox
    imageTag: 1.34.0-004

  opensuse:
    image: opensuse-base
    imageTag: 15.2-0074

  opsbridgeIntegration:
    isSelected: false
  # feature enablement for COSO and BVD
  coso:
    isSelected: true
  vertica:
    embedded: true
    host:
    port:
    db:
    useSsl:
    username:
    passwordKey:
    schema:
    entitySchema: nom

  database:
    tlsTruststore:
  di:
    tenant: provider
    deployment: default

  cluster:
    k8sProvider: cdf

  #Properties for Shared Optic Reporting
  services:
    sharedOpticReporting: false
    namespace:
    external:
      host:
      port:
    internal:
      host:
      port:


sybase:
  host:
  port: "9303"
  db: "perfspi"
  user: "DBA"
  passwordKey: "SYBASE_DB_PASSWORD_KEY" #This should not be changed.

deployment:

  idm:
    # IDM now has a name prefix, which can be changed by composition chart.
    namePrefix: "itom-"
    service: idm-svc
    port: 18443
    user: nomadmin
    passwordKey: idm_nom_admin_password
    transportUser: transport_admin
  replicas: 3

resources:

# Assigning pods to cluster nodes
nodeSelector:
  Worker: label

tolerations: []

affinity: {}

#####################
# Image definitions
#####################
telemetry:
  collector:
    component: collector
  image: itom-nom-telemetry
  imageTag: 0.0.37

##################################
#  CONFIGURATION DEFAULTS
##################################
  ports:
    http: "8080"
    https: "8443"
    grpc: "8500"
    grpcs: "8543"
  nodeport:
    grpc: "35500"
    grpcs: "35543"
  nontls:
    enabled: true
  tls:
    enabled: true
    serverkeypath: "/var/run/secrets/boostport.com/server.key"
    servercertpath: "/var/run/secrets/boostport.com/server.crt"
    trustedcertpath: "/var/run/secrets/boostport.com/issue_ca.crt"
    ciphers: TLS_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA
    protocols: TLSv1.2,TLSv1.1,TLSv1
    keystoreType: PKCS12
    # clientAuth: REQUIRE, OPTIONAL, or NONE
    clientAuth: OPTIONAL
    endpointIps:
    tlsTruststore:

