#
#  (c) Copyright 2018-2021 Micro Focus or one of its affiliates.
#
#  The only warranties for products and services of Micro Focus and its affiliates and licensors
#  ("Micro Focus") are as may be set forth in the express warranty statements accompanying such
#  products and services. Nothing herein should be construed as constituting an additional
#  warranty. Micro Focus shall not be liable for technical or editorial errors or omissions contained
#  herein. The information contained herein is subject to change without notice.
#
#  Except as specifically indicated otherwise, this document contains confidential information
#  and a valid license is required for possession, use or copying. If this work is provided to the
#  U.S. Government, consistent with FAR 12.211 and 12.212, Commercial Computer Software,
#  Computer Software Documentation, and Technical Data for Commercial Items are licensed
#  to the U.S. Government under vendor's standard commercial license.
#
apiVersion: v1
kind: Service
metadata:
  name: "{{- include "telemetry.fullname" . -}}-{{ .Values.telemetry.collector.component }}"
  labels:
    app: "{{- include "telemetry.name" . }}"
    name: "{{- include "telemetry.fullname" . }}"
    exposure: internal
    {{- if .Values.global.database.tlsTruststore }}
    configmap.reloader.stakater.com/reload: {{ .Values.global.database.tlsTruststore | quote }}
    {{- end }}
spec:
  ports:
    {{- if (not (eq (toString (default .Values.telemetry.nontls.enabled false)) "false")) }}
    - port: {{ .Values.telemetry.ports.grpc }}
      protocol: TCP
      name: "grpc"
      targetPort: {{ .Values.telemetry.ports.grpc }}
    {{- end }}
    {{- if (not (eq (toString (default .Values.telemetry.tls.enabled false)) "false")) }}
    - port: {{ .Values.telemetry.ports.grpcs }}
      protocol: TCP
      name: "grpcs"
      targetPort: {{ .Values.telemetry.ports.grpcs }}
    {{- end }}
    {{- if (not (eq (toString (default .Values.telemetry.nontls.enabled false)) "false")) }}
    - port: {{ .Values.telemetry.ports.http }}
      protocol: TCP
      name: "http"
      targetPort: {{ .Values.telemetry.ports.http }}
    {{- end }}
    {{- if (not (eq (toString (default .Values.telemetry.tls.enabled false)) "false")) }}
    - port: {{ .Values.telemetry.ports.https }}
      protocol: TCP
      name: "https"
      targetPort: {{ .Values.telemetry.ports.https }}
    {{- end }}

  selector:
    name: "{{- include "telemetry.fullname" . -}}-{{ .Values.telemetry.collector.component }}"
