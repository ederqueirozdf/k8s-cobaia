global:
  secretStorage:
  initSecrets:
  docker:
    # set the global.docker.registry and orgName to your internal Docker registry/org
    registry: docker.io
    orgName: hpeswitom
    imagePullSecret: "regcred"
    imagePullPolicy: IfNotPresent
    image: itom-data-ingestion-minio
    imageTag: 2.5.0-21

  securityContext:
    user: "1999"
    group: "1999"
    fsGroup: "1999"
  di:
    cloud:
      externalDNS:
        enabled: false
      externalAccessHost:
        minio:

  # If deployPrometheusConfig is true, CDF Monitoring Framework is assumed to be installed and will use it for metric storage
  prometheus:
    deployPrometheusConfig: true
    prometheusSelector:
      prometheus_config: "1"
    scrapeCertSecretName: "itom-di-prometheus-scrape-cert"


  # Global image references
  vaultRenew:
    #registry:
    #orgName:
    image: kubernetes-vault-renew
    imageTag: 0.8.0-006
  vaultInit:
    #registry:
    #orgName:
    image: kubernetes-vault-init
    imageTag: 0.8.0-006
  busybox:
    image: itom-busybox
    imageTag: 1.32.0-006

  externalAccessHost:
  # RBAC 
  rbac:
    serviceAccountCreate: true
    roleCreate: true

  cluster:
    k8sProvider: cdf

  loadBalancer:
    ip:
    sourceRanges:

diminio:
  pdb:
    usePolicy: true
    maxUnavailable: 25%

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
  persistence:
    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## minio data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    ## Storage class of PV to bind. By default it looks for standard storage class.
    ## If the PV uses a different storage class, specify that here.
    storageClassName: do-block-storage
    enabled: true
    VolumeName: "98Gi"
    accessMode: ReadWriteOnce
    size: 2Gi
    ## If subPath is set mount a sub folder of a volume instead of the root of the volume.
    ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).
    ##
    subPath: ""

  service:
    type: NodePort
    clusterIP: ~
    port: 9000
    nodePort: 30006
    isNodePortEnabled: true

  ingress:
    enabled: false
    path: /


  clientAccessKey: ITOMDI_MINIO_CLIENT_ACCESS_KEY
  clientSecretKey: ITOMDI_MINIO_CLIENT_SECRET_KEY

  tls:
    enabled: true
    certSecret: ""
    publicCrt: public.crt
    privateKey: private.key

  environment:
    MINIO_BROWSER: "off"
    MINIO_PROMETHEUS_AUTH_TYPE: "public"
    MINIO_MULTIPART_EXPIRY_HOURS: "1"
    MINIO_MULTIPART_CLEANUP_MINS: "30"

## set kubernetes cluster domain where minio is running
##
clusterDomain: cluster.local

## Set default image, imageTag, and imagePullPolicy. mode is used to indicate the
##
fullnameOverride: itom-di-minio

image:
  #repository: docker.io/hpeswitom/itom-data-ingestion-minio
  tag: 2.5.0-21
  pullPolicy: IfNotPresent
  registry: docker.io
  orgName: hpeswitom
  imagePullSecret: "regcred"
  imagePullPolicy: IfNotPresent



## minio server mode, i.e. standalone or distributed.
## Distributed Minio ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide
##
mode: distributed

## Additional arguments to pass to minio binary
extraArgs: []

## Update strategy for Deployments
DeploymentUpdate:
  type: RollingUpdate
  maxUnavailable: 0
  maxSurge: 100%

## Update strategy for StatefulSets
StatefulSetUpdate:
  updateStrategy: RollingUpdate

## Pod priority settings
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

## Set default accesskey, secretkey, Minio config file path, volume mount path and
## number of nodes (only used for Minio distributed mode)
## AccessKey and secretKey is generated when not set
## Distributed Minio ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide
##
existingSecret: ""
#accessKey: ITOMDI_MINIO_ADMIN_ACCESS_KEY
#secretKey: ITOMDI_MINIO_ADMIN_SECRET_KEY
configPath: "/root/.minio/"
configPathmc: "/root/.mc/"
mountPath: "/export"
replicas: 4
zones: 1

## TLS Settings for Minio
tls:
  enabled: true
  ## Create a secret with private.key and public.crt files and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
  certSecret: ""
  publicCrt: public.crt
  privateKey: private.key


## Expose the Minio service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##

service:
  type: NodePort
  clusterIP: ~
  port: 9000
  nodePort: 30006
  # externalIPs:
  #   - externalIp1
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path:   '/minio/prometheus/metrics'
    prometheus.io/port:   '9000'

## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/
##

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # kubernetes.io/ingress.allow-http: "false"
    # kubernetes.io/ingress.global-static-ip-name: ""
    # nginx.ingress.kubernetes.io/secure-backends: "true"
  # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  # nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
deployment:
  rbac:
    serviceAccount: ""
tolerations: []
affinity: {}

# Additational pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9000"
  prometheus.io/path: "/minio/prometheus/metrics"

# Additional pod labels
podLabels: {}

## Liveness and Readiness probe values.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 20
  failureThreshold: 36
readinessProbe:

  initialDelaySeconds: 60
  periodSeconds: 20
  failureThreshold: 36

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 256Mi
    cpu: 250m
  limits:
    cpu: 4
    memory: 8Gi
## Create a bucket after minio install
##
defaultBucket:
  enabled: false
  ## If enabled, must be a string with length > 0
  name: bucket
  ## Can be one of none|download|upload|public
  policy: none
  ## Purge if bucket exists already
  purge: false

## Create multiple buckets after minio install
## Enabling `defaultBucket` will take priority over this list
##
buckets: []
  # - name: bucket1
  #   policy: none
  #   purge: false
  # - name: bucket2
#   policy: none
#   purge: false

s3gateway:
  enabled: false
  replicas: 1
  serviceEndpoint: ""

## Use minio as an azure blob gateway, you should disable data persistence so no volume claim are created.
## https://docs.minio.io/docs/minio-gateway-for-azure
azuregateway:
  enabled: false
  # Number of parallel instances
  replicas: 4

## Use minio as GCS (Google Cloud Storage) gateway, you should disable data persistence so no volume claim are created.
## https://docs.minio.io/docs/minio-gateway-for-gcs

gcsgateway:
  enabled: false
  # Number of parallel instances
  replicas: 4
  # credential json file of service account key
  gcsKeyJson: ""
  # Google cloud project-id
  projectId: ""

ossgateway:
  enabled: false
  # Number of parallel instances
  replicas: 4
  endpointURL: ""

## Use minio on NAS backend
## https://docs.minio.io/docs/minio-gateway-for-nas

nasgateway:
  enabled: false
  # Number of parallel instances
  replicas: 4
  # For NAS Gateway, you may want to bind the PVC to a specific PV. To ensure that happens, PV to bind to should have
  # a label like "pv: <value>", use value here.
  pv: ~

## Use minio as Backblaze B2 gateway
## https://github.com/minio/minio/blob/master/docs/gateway/b2.md
b2gateway:
  enabled: false
  # Number of parallel instances
  replicas: 4

## Use this field to add environment variables relevant to Minio server. These fields will be passed on to Minio container(s)
## when Chart is deployed
## For itom-di-minio , will be taking up parameters from diminio.environment. Below Values will not be used in statefulset
environment:
  ## To disable Minio Browser, set this value to off
  MINIO_BROWSER: "off"
  MINIO_MULTIPART_EXPIRY_HOURS: "1"
  MINIO_MULTIPART_CLEANUP_MINS: "30"
  ## To enable virtual-host-style requests, set this value to Minio host domain name.
  # MINIO_DOMAIN: ""
  ## Minio Cache settings, refer: https://docs.minio.io/docs/minio-disk-cache-guide.html
  # MINIO_CACHE_DRIVES: ""
  # MINIO_CACHE_EXCLUDE: ""
  # MINIO_CACHE_EXPIRY: ""
  # MINIO_CACHE_MAXUSE: ""
  ## Minio WORM setting, refer: https://docs.minio.io/docs/minio-server-configuration-guide.html
  # MINIO_WORM: ""
  ## Minio KMS settings, refer: https://docs.minio.io/docs/minio-kms-quickstart-guide.html
  # MINIO_SSE_VAULT_ENDPOINT: ""
  # MINIO_SSE_VAULT_APPROLE_ID: ""
  # MINIO_SSE_VAULT_APPROLE_SECRET: ""
  # MINIO_SSE_VAULT_KEY_NAME: ""
  ## Minio Federation settings, refer: https://docs.minio.io/docs/minio-federation-quickstart-guide.html
  # MINIO_ETCD_ENDPOINTS: ""
  # MINIO_PUBLIC_IPS: ""
  # MINIO_DOMAIN: ""
  ## Add other environment variables relevant to Minio server here. These values will be added to the container(s) as this Chart is deployed
  #MINIO_REGION_NAME: "us-west-co"
  ### turning on proxy settings for distributed mode causes havoc. Only use these for Gateways. ###
  #HTTP_PROXY: "http://web-proxy.us.softwaregrp.net:8080"
  #HTTPS_PROXY: "http://web-proxy.us.softwaregrp.net:8080"
  MINIO_PROMETHEUS_AUTH_TYPE: "public"

networkPolicy:
  enabled: false
  allowExternal: true

## Specify the service account to use for the Minio pods. If 'create' is set to 'false'
## and 'name' is left unspecified, the account 'default' will be used.
serviceAccount:
  create: false
  ## The name of the service account to use. If 'create' is 'true', a service account with that name
  ## will be created. Otherwise, a name will be auto-generated.
  name:

metrics:
  # Metrics can not be disabled yet: https://github.com/minio/minio/issues/7493
  serviceMonitor:
    enabled: false
    additionalLabels: {}
    # namespace: monitoring
    # interval: 30s
    # scrapeTimeout: 10s