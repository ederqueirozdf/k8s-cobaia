nomzk:
  config:
    jvmMinHeap: "256M"
    jvmMaxHeap: "256M"
    tick: "2000"
    init: "10"
    sync: "5"
    clientCnxns: "60"
    snapRetain: "3"
    purgeInterval: "0"
global:
  # persistence.dataVolumeClaim is a persistent volume claim for storing Zookeeper data files.
  # persistence.logVolume is a persistent volume claim for storing Zookeeper log files.
  # If either is undefined, then temporary ephemeral storage will be created.
  persistence:
    enabled: false
    dataVolumeClaim:
    logVolumeClaim:

  docker:
    registry: localhost:5000
    orgName: hpeswitom
    imagePullSecret: ""
    imagePullPolicy: IfNotPresent

  # if isDemo is true, this will allow use of ephemeral storage and other POC concepts
  isDemo: false

  # Used for instances of injected services, i.e. "global.instance.zookeeper" or "global.instance.postgres"
  instance: {}

  securityContext:
    user: "1999"
    fsGroup: "1999"

  rbac:
    # Specifies whether a ServiceAccount should be created
    serviceAccountCreate: true

resources:
  # The following are Micro Focus tested values for resources for Zookeeper
  limits:
    cpu: "0.5"
    memory: "512Mi"
  requests:
    cpu: "100m"
    memory: "256Mi"
#####################
# Image definitions
#####################
zookeeper:
  image: itom-zookeeper
  imageTag: 3.6.3.125

  # Assigning pods to cluster nodes
nodeSelector:
  Worker: label

tolerations: []
# The following are Micro Focus tested values for Zookeeper affinity:
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: "name"
                operator: In
                values:
                  - zookeeper
          topologyKey: "kubernetes.io/hostname"

deployment:
  replicas: 1